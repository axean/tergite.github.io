---
title: "Hardware Configuration"
---

Documentation about configuring [tergite-backend](https://github.com/tergite/tergite-backend)

## General Configuration

To configure the entire tergite-backend application, we use `.env` files.   

Just copy the [`dot-env-template.txt`](https://github.com/tergite/tergite-backend/blob/main/dot-env-template.txt) to `env` and update the variables there in.

```zsh
cp dot-env-template.txt .env
```

## QBLOX Instruments Configuration

We use the [`executor-config.example.yml`](https://github.com/tergite/tergite-backend/blob/main/executor-config.example.yml) as a template for how to configure this application
to control the [QBLOX instruments](https://qblox-qblox-instruments.readthedocs-hosted.com/en/main/index.html) that control the quantum computer. 

It is well documented. Just copy it to `executor-config.yml` in the tergite-backend folder and update its variables and you are good to go.

```zsh
cp executor-config.example.yml executor-config.yml
```

### Dummy QBLOX Instrumments

You may wish to run some dummy QBLOX instruments if you don't have access to the physical QBLOX instruments

We already have a preconfigured [`dummy-executor-config.yml`](https://github.com/tergite/tergite-backend/blob/main/app/tests/fixtures/dummy-executor-config.yml) for this in the 
`app/tests/fixtures` folder.   

Copy it to the tergite-backend folder.

```zsh
cp app/tests/fixtures/dummy-executor-config.yml executor-config.yml
```

_NOTE: You can find out more about the configuration properties in the executor-config file by 
visiting the [quantify_scheduler docs](https://quantify-os.org/docs/quantify-scheduler/dev/reference/qblox/Cluster.html)
and the [QCoDeS drivers docs](https://microsoft.github.io/Qcodes/)._  

_NOTE: You could choose to use a different name for your quantum executor config file e.g. `foobar.yml`.
You however need to explicitly set this name in the `.env` file `EXECUTOR_CONFIG_FILE=foobar.yml`_  

### Calibrated Data Configuration

We also recalibrate the quantum computer from time to time and store that data in TOML files in the [`configs`](https://github.com/tergite/tergite-backend/blob/main/configs) folder.  

When starting the application, one needs to supply one calibration set from any of those configuration files.

```zsh
./start_tergite-backend.sh --device configs/device_default.toml
```

_NOTE: You don't need to pass the `.env` file or the `executor-config.yml` file to the start script as these are 
automatically loaded for you._  

